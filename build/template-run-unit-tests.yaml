# template-run-unit-tests.yaml
# Run all unit tests across the LibsAndSamples.sln project

parameters:
  BuildConfiguration: 'debug'

steps:

- task: VSTest@2
  displayName: 'Run unit tests (.NET FX)'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Microsoft.Identity.Test.Unit\bin\**\net4*\Microsoft.Identity.Test.Unit.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    runInParallel: true
    codeCoverageEnabled: true

- task: VSTest@2
  displayName: 'Run unit tests (.NET CORE)'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Microsoft.Identity.Test.Unit\bin\**\netcore*\Microsoft.Identity.Test.Unit.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    runInParallel: true
    codeCoverageEnabled: true

# install python and run cache tests
- task: stevedower.python.PythonScript.PythonScript@1
  displayName: 'Update PIP'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    arguments: '-m pip install --upgrade pip'

- task: stevedower.python.PythonScript.PythonScript@1
  displayName: 'Install MSAL.Python PIP'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    arguments: '-m pip install msal'

- task: VSTest@2
  displayName: 'Run cache compat tests'
  condition: and(succeeded(), eq(variables['RunTests'], 'true'))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\CacheCompat\CommonCache.Test.Unit\bin\**\CommonCache.Test.Unit.dll'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
